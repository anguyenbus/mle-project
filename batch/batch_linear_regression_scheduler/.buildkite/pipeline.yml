env:
  QUALITY_GATES_IMAGE: 123456789876.dkr.ecr.ap-southeast-2.amazonaws.com/devops/devops-buildkite-quality-gates:latest
  ECR_REPOSITORY_NAME: brain/batch-linear-regression-scheduler
  SHARED_ECR_REPOSITORY_URI: 123456789876.dkr.ecr.ap-southeast-2.amazonaws.com
  MAJOR_VERSION: 1
  MINOR_VERSION: 0
  DOCKERFILE_PATH: batch.linear-regression.extraction.scheduler.Dockerfile
  DOCKER_COMPOSE_PATH: docker-compose.yml
  SERVICE_NAME: batch-linear-regression-scheduler
  ENVIRONMENTS_DEFINITION_BRANCH: main
  PROD_DEPLOY_BRANCH: master

steps:

  - label: ":mag: :terraform: Static Analysis - Terraform Static Analysis | ${DEPLOY_ACCOUNT_NAME} - ${DEPLOY_REGION} - ${DEPLOY_SITE_ID} - ${DEPLOY_CUSTOMER_NAME}"
    depends_on: ~
    key: terraform_static_analysis
    agents:
      queue: shared
    plugins:
      - ecr#v2.4.0:
          login: true
          account_ids: "123456789876"
          region: "ap-southeast-2"
      - docker#v3.8.0:
          image: "${SHARED_ECR_REPOSITORY_URI}/devops/devops-buildkite-quality-gates:latest"
          propagate-environment: true
          volumes:
            - "./$TERRAFORM_PATH:/data:rw"
          command: [ 'terraform_static_analysis' ]

  - label: ":hammer_and_wrench: :docker: Docker Build"
    key: docker_build
    agents:
      queue: shared
    # depends_on: dockerfile_static_analysis
    plugins:
      - ./.buildkite/plugins/get-python-comm: ~
      - docker-compose#v3.8.0:
          config:
            - docker-compose.yml
          image-repository: ${SHARED_ECR_REPOSITORY_URI}/${ECR_REPOSITORY_NAME}
          cache-from: ${SERVICE_NAME}:${SHARED_ECR_REPOSITORY_URI}/${ECR_REPOSITORY_NAME}:latest
          image-name: build-$BUILDKITE_BUILD_NUMBER # this is actually the tag
          build: ${SERVICE_NAME}

  - label: ":mag: :docker: Snyk Container Vulnerability Scan"
    key: snyk_container_scan
    agents:
      queue: shared
    depends_on: docker_build
    env:
      PROJECT_NAME: $SERVICE_NAME
      IMAGE_NAME: ${SHARED_ECR_REPOSITORY_URI}/${ECR_REPOSITORY_NAME}:build-${BUILDKITE_BUILD_NUMBER}
      SNYK_CONTAINER_SCAN_EXIT_ON_FAIL: false
      SEVERITY_THRESHOLD: critical
    command: snyk_container_scan

  - label: ":arrow_up: :docker: Docker Push $SERVICE_NAME"
    key: docker_push
    depends_on:
      - docker_build
      # - snyk_container_scan
    agents:
      queue: shared
    plugins:
      - ecr#v2.4.0:
          login: true
      - docker-compose#v3.8.0:
          push:
            - ${SERVICE_NAME}:${SHARED_ECR_REPOSITORY_URI}/${ECR_REPOSITORY_NAME}:${PACKAGE_VERSION:-$BUILDKITE_BUILD_NUMBER}
            - ${SERVICE_NAME}:${SHARED_ECR_REPOSITORY_URI}/${ECR_REPOSITORY_NAME}:latest

  - label: ":mag: :docker: ECR Container Vulnerability Scan"
    key: ecr_container_scan
    agents:
      queue: shared
    depends_on:
      - snyk_container_scan
      - docker_push
    env:
      ECR_REPOSITORY_NAME: $ECR_REPOSITORY_NAME
      IMAGE_TAG: build-${BUILDKITE_BUILD_NUMBER}
      ECR_SCAN_RESULT_EXIT_ON_FAIL: false
      ECR_SCAN_RESULT_HIGH_THRESHOLD: 10
    command: ecr_container_scan

  - block: ":green_button: Deploy to DEV?"
    key: block_deploy_dev
    branches: "!${PROD_DEPLOY_BRANCH}"

  - label: ":buildkite: Generate dev deploy steps for each region and site"
    key: generate_deploy_steps_dev
    depends_on: ~
    agents:
      queue: shared
    env:
      DEPLOY_ENV: "dev"
      PACKAGE_DOCKER_LABEL: $PACKAGE_VERSION
    command: |
      node batch/batch_linear-regression_extraction_scheduler/.buildkite/scripts/generate-deploy-trigger-step.js | buildkite-agent pipeline upload
    plugins:
      - ./.buildkite/plugins/get-environments-definition:
          branch: $ENVIRONMENTS_DEFINITION_BRANCH

  - wait

  - block: ":green_button: Deploy to STAGING?"
    key: block_deploy_stage
    depends_on: ~
    branches: "${PROD_DEPLOY_BRANCH}"

  - label: ":buildkite: Generate staging deploy steps for each region and site"
    key: generate_deploy_steps_stage
    depends_on: ~
    branches: "${PROD_DEPLOY_BRANCH}"
    agents:
      queue: shared
    env:
      DEPLOY_ENV: "stage"
      PACKAGE_DOCKER_LABEL: $PACKAGE_VERSION
    command: |
      node batch/batch_linear-regression_extraction_scheduler/.buildkite/scripts/generate-deploy-trigger-step.js | buildkite-agent pipeline upload
    plugins:
      - ./.buildkite/plugins/get-environments-definition:
          branch: $ENVIRONMENTS_DEFINITION_BRANCH

  - wait

  - block: ":green_button: Deploy to Production?"
    key: block_deploy_prod
    depends_on: ~
    branches: "${PROD_DEPLOY_BRANCH}"

  - label: ":buildkite: Generate production deploy steps for each region and site"
    key: generate_deploy_steps_production
    depends_on: ~
    branches: "${PROD_DEPLOY_BRANCH}"
    agents:
      queue: shared
    env:
      DEPLOY_ENV: "prod"
      PACKAGE_DOCKER_LABEL: $PACKAGE_VERSION
    command: |
      node batch/batch_linear-regression_extraction_scheduler/.buildkite/scripts/generate-deploy-trigger-step.js | buildkite-agent pipeline upload
    plugins:
      - ./.buildkite/plugins/get-environments-definition:
          branch: $ENVIRONMENTS_DEFINITION_BRANCH
