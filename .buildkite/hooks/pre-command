#!/bin/bash

export AWS_DEFAULT_REGION=$DEPLOY_REGION
export AWS_REGION=$DEPLOY_REGION
echo "set correct AWS region $DEPLOY_REGION"

if [[ -n "${ECS_TASK_DEFINITION_TEMPLATE_PATH}" ]]; then

    ECS_TASK_DEFINITION_RENDERED_PATH="$(dirname $ECS_TASK_DEFINITION_TEMPLATE_PATH)/task-definition.json"
    sed "s#%ENV#$DEPLOY_ENV#; s#%REGION_SHORTNAME#$DEPLOY_REGION_SHORTNAME#; s#%CUSTOMERS#$DEPLOY_CUSTOMERS#; s#%BRAIN_ID#$DEPLOY_BRAIN_ID#; s#%BRAIN_NAME#$DEPLOY_BRAIN_NAME#; s#%REGION#$DEPLOY_REGION#; s#%ECS_IMAGE#$ECS_IMAGE#; s#%ECS_EXECUTION_ROLE#$ECS_EXECUTION_ROLE#; s#%BATCH_PROCESSOR_COUNT#$DEPLOY_BATCH_PROCESSOR_COUNT#; s#%RESULT_WRITER_COUNT#$DEPLOY_RESULT_WRITER_COUNT#;" \
        $ECS_TASK_DEFINITION_TEMPLATE_PATH \
        >  $ECS_TASK_DEFINITION_RENDERED_PATH
    cat  $ECS_TASK_DEFINITION_RENDERED_PATH
    echo "File saved at $ECS_TASK_DEFINITION_RENDERED_PATH"

fi

get_ssm () {
  aws ssm get-parameter --name "$1" --query "Parameter.Value" --with-decryption --output text
}

DEPLOY_ECS_TASK_ROLE_BATCH_LINEAR_REGRESSION=$(get_ssm "/mle-project/${DEPLOY_BRAIN_ID}/batch-linear-regression/task-role-arn")
export DEPLOY_ECS_TASK_ROLE_BATCH_LINEAR_REGRESSION


DEPLOY_ECS_TASK_ROLE_LINEAR_REGRESSION=$(get_ssm "/mle-project/${DEPLOY_BRAIN_ID}/linear-regression/task-role-arn")
export DEPLOY_ECS_TASK_ROLE_LINEAR_REGRESSION

DEPLOY_ECS_CLUSTER_BATCH_LINEAR_REGRESSION=$(get_ssm "/mle-project/${DEPLOY_BRAIN_ID}/batch-linear-regression/processing-ecs-cluster/name")
export DEPLOY_ECS_CLUSTER_BATCH_LINEAR_REGRESSION
echo "DEPLOY_ECS_CLUSTER_BATCH_LINEAR_REGRESSION: ${DEPLOY_ECS_CLUSTER_BATCH_LINEAR_REGRESSION}"

echo "end pre-command hook"

